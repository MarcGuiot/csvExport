# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        env:
          GH_MAVEN_REGISTRY_USER: ${{ secrets.PRIVATE_ACCESS_TOKEN_USER }}
          GH_MAVEN_REGISTRY_ACCESS_TOKEN: ${{ secrets.PRIVATE_ACCESS_TOKEN }}
        run: cd taskmanager && mvn -s ../settings.xml install

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy to GitHub registry
        env:
          GLINDA_DOCKER_REGISTRY: ghcr.io
          GLINDA_DOCKER_IMAGE_NAME: ${{ github.repository }}
          IMAGE_TAG: latest
          GH_MAVEN_REGISTRY_USER: ${{ secrets.PRIVATE_ACCESS_TOKEN_USER }}
          GH_MAVEN_REGISTRY_ACCESS_TOKEN: ${{ secrets.PRIVATE_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: cd taskmanager && mvn -ntp compile jib:build -s ../settings.xml -Djib.to.image=ghcr.io/the-other-store/glinda-backend:$IMAGE_TAG -Djib.to.auth.username=$GH_MAVEN_REGISTRY_USER  -Djib.to.auth.password=$GH_MAVEN_REGISTRY_ACCESS_TOKEN
